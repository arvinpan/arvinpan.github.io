{"version":3,"file":"component---gatsby-themes-themes-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-how-to-stop-a-console-process-on-windows-using-python-index-mdx-92691bd1561a66896cec.js","mappings":"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","sources":["webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./content/posts/how-to-stop-a-console-process-on-windows-using-python/index.mdx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"Background\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"In Python, we use \", React.createElement(_components.code, null, \" p = subprocess.Popen(cmd)\"), \" to start a command and call \", React.createElement(_components.code, null, \"p.terminate()\"), \"  to stop it. But for some commands on Windows, e.g. \", React.createElement(_components.code, null, \"ping 127.0.0.1 -n 9999\"), \" , terminate it will \\\"force stop\\\" it without producing the \\\"ping statistics\\\" in the end. These processes need to be stopped by the CTRL-C event in order to allow them finish some \\\"cleanups\\\" nicely.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Discusses\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"There've been lots of discusses around this topic.\"), \"\\n\", React.createElement(_components.li, null, \"FIXME: fix all links\"), \"\\n\", React.createElement(_components.li, null, \"See \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"Sending ^C to Python subprocess objects on Windows - Stack Overflow\"), \"   and \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"signals - Can I send a ctrl-C (SIGINT) to an application on Windows? - Stack Overflow\"), \"  for solutions\"), \"\\n\", React.createElement(_components.li, null, \"Also \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"GenerateConsoleCtrlEvent function - Windows Console | Microsoft Docs\"), \"  and \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"subprocess — Subprocess management — Python 3.9.2 documentation\"), \" for some official info\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Summary\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Two solutions\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Solution 1, use \", React.createElement(_components.code, null, \"subprocess.send_signal(signal.CTRL_C_EVENT)\"), \"  and ignore the KeyboardInterrupt exception at the caller side\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The key is to handle the side effects of the CTRL-C event, a simple solution is to wait in the caller process until child process exited.\"), \"\\n\", React.createElement(_components.li, null, \"example code\", \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \" # stop the process\\n p.send_signal(signal.CTRL_C_EVENT) \\n \\n # wait in the caller process to ignore the KeyboardInterrupt\\ntry:\\n    # needs to be longer than the time costs that child process requires to exit\\n    time.sleep(10)\\nexcept KeyboardInterrupt:\\n    print(\\\"Ignored keyboard interrupt\\\")\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Cons\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The CTRL-C event is sent to the whole process group, which means if your python main process starts a lot of processes, e.g. started multiple \", React.createElement(_components.code, null, \"ping -n 9999\"), \" commands, cancel either one will result in all processes (which have the same process group and have not ignored the KeyboardInterrupt exception) exited earlier than expected.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"In short, this is a solution for simple applications, or applications don't have multiple child processes with the same process group at the same time.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Solution 2, use some \\\"Windows hacks\\\"\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The key the to completely avoid CTRL-C message being spread to other processes.\"), \"\\n\", React.createElement(_components.li, null, \"Starts a new command, which will free the console, attach to the target console, and fires the CTRL-C event.\"), \"\\n\", React.createElement(_components.li, null, \"See example code shared in \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"Sending ^C to Python subprocess objects on Windows - Stack Overflow\")), \"\\n\", React.createElement(_components.li, null, \"FIXME: add portal here.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"The final solution\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"I've created a \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"console-ctrl project\"), \" python package based on the \", React.createElement(_components.a, {\n    href: \"\"\n  }, \"Solution 2, use some \\\"Windows hacks\\\"\"), \" above.\"), \"\\n\", React.createElement(_components.li, null, \"FIXME: add portal here.\"), \"\\n\", React.createElement(_components.li, null, \"See README for details.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/arvin/project/cxbase/blog/content/posts/how-to-stop-a-console-process-on-windows-using-python/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","_createMdxContent","_components","Object","assign","h3","ul","li","code","pre","_provideComponents","components","href","className"],"sourceRoot":""}