{"version":3,"file":"component---gatsby-themes-themes-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-87d4c980baed2fd75e44.js","mappings":"qRAkDA,MArBYA,IAAyC,IAAxC,MAAEC,EAAK,YAAEC,GAAyBF,EAC7C,MAAM,SAAEG,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,GAAI,CAACC,GAAI,CAAEC,WAAW,SAAWC,eAAe,gBAAkBC,SAAS,UAC1EN,EAAAA,EAAAA,GAACO,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,YAAYN,GAAI,CAAEO,QAAS,IACjDd,EAAYe,OAEfX,EAAAA,EAAAA,GAACY,EAAAA,KAAI,CACHT,GAAKU,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUE,EAAGP,QAAQ,kBAAoBC,QAAS,EAAG,EACtEO,IAAIC,EAAAA,EAAAA,GAAe,IAAIpB,EAAQ,IAAID,IACpC,mBAIHG,EAAAA,EAAAA,GAACmB,EAAAA,EAAO,CAACxB,MAAOA,EAAOQ,GAAI,CAAEiB,GAAI,CAAC,EAAG,MAC9B,EAMN,MAAMC,EAA0CC,IAAA,IAAC,YAAE1B,GAAa0B,EAAA,OAAKtB,EAAAA,EAAAA,GAACuB,EAAAA,EAAG,CAACC,MAAK,QAAU5B,EAAYe,MAAU,ECjDtH,MCce,SAA2BjB,GAAuB,OAAjB+B,GAAc/B,EAC5D,MACEgC,MAAM,QAAEC,IACNF,EAEJ,OAAOG,EAAAA,cAACC,EAAGC,OAAAC,OAAA,CAACpC,MAAOgC,EAAQK,OAAWP,GACxC,C,4GCgBA,MAjBqB/B,IAAA,IAAC,KAAEuC,EAAI,SAAEC,GAAW,GAAyBxC,EAAA,OAChEM,EAAAA,EAAAA,GAACmC,EAAAA,GAAG,CAACC,GAAI,IACPpC,EAAAA,EAAAA,GAACY,EAAAA,KAAI,CAACK,GAAIgB,EAAKI,KAAMlC,GAAKU,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUE,EAAGsB,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAM,OAAS,GACpFN,EAAKT,QAERxB,EAAAA,EAAAA,GAAA,KAAGG,GAAI,CAAEoC,MAAM,YAAcnB,GAAI,EAAGJ,EAAG,CAAEuB,MAAM,aAAgBD,SAAU,CAAC,EAAG,EAAG,MAC9EtC,EAAAA,EAAAA,GAAA,YAAOiC,EAAKO,MACXP,EAAKQ,MAAQP,IACZlC,EAAAA,EAAAA,GAAC4B,EAAAA,SAAc,YAEb5B,EAAAA,EAAAA,GAAC0C,EAAAA,EAAQ,CAACD,KAAMR,EAAKQ,SAIvB,ECPR,MARgB/C,IAAA,IAAC,MAAEC,EAAK,UAAEgD,EAAS,GAAK,SAAET,GAAW,GAAoBxC,EAAA,OACvEM,EAAAA,EAAAA,GAAA,WAASG,GAAI,CAAEiC,GAAI,CAAC,EAAG,EAAG,IAAMO,UAAWA,GACxChD,EAAMiD,KAAKX,IACVjC,EAAAA,EAAAA,GAAC6C,EAAY,CAACC,IAAKb,EAAKI,KAAMJ,KAAMA,EAAMC,SAAUA,MAE9C,C","sources":["webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./gatsby-themes/themes/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\nexport type MBTagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n  }\n}\n\nconst Tag = ({ posts, pageContext }: MBTagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n\nexport const Head: HeadFC<unknown, { name: string }> = ({ pageContext }) => <Seo title={`Tag: ${pageContext.name}`} />\n","import { graphql } from \"gatsby\"\nimport TagComponent, { Head } from \"../components/tag\"\n\nexport default TagComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { date: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag, { Head } from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","posts","pageContext","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","name","Link","t","_t$styles","styles","a","to","replaceSlashes","Listing","mt","Head","_ref2","Seo","title","props","data","allPost","React","Tag","Object","assign","nodes","post","showTags","Box","mb","slug","fontSize","color","date","tags","ItemTags","className","map","BlogListItem","key"],"sourceRoot":""}